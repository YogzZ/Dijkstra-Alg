#include <stdio.h>
#include <stdlib.h>

void Dijkstra(int n, int v, int dist[], int prev[], int **cost) {
    int i;
    int j;
    int maxint = 65535;
    int *s;
    s = (int *) malloc(sizeof(int) * n);
    for (i = 1; i <= n; i++) {
        dist[i] = cost[v][i];
        s[i] = 0;
        if (dist[i] == maxint) {
            prev[i] = 0;
        } else {
            prev[i] = v;

        }
    }
    dist[v] = 0;
    s[v] = 1;

    for (i = 1; i < n; i++) {
        int temp = maxint;
        int u = v;
        for (j = 1; j < n; j++) {
            if ((!s[j]) && (dist[j] < temp)) {
                u = j;
                temp = dist[j];
            }
        }
        s[u] = 1;
        for (j = 1; j <= n; j++) {
            if ((!s[j]) && (cost[u][j] < maxint)) {
                int newdist = dist[u] + cost[u][j];
                if (newdist < dist[j]) {
                    dist[j] = newdist;
                    prev[j] = u;
                }
            }
        }
    }
}

void ShowPath(int n, int v, int u, int *dist, int *prev) {
    int j = 0;
    int w = u;
    int count = 0;
    int *way;
    way = (int *) malloc(sizeof(int) * (n + 1));
    while (w != v) {
        count++;
        way[count] = prev[w];
        w = prev[w];
    }
    printf("the best path is:\n");
    for (j = count; j >= 1; j--) {
        printf("%d->", way[j]);
    }
    printf("%d\n", u);
}

void main() {
    int i, j, t;
    int n, v, u;
    int **cost;
    int *dist;
    int *prev;
    printf("please input the node number: ");
    scanf("%d", &n);
    printf("please input the cost status: \n");
    cost = (int **) malloc(sizeof(int) * (n + 1));
    for (i = 1; i <= n; i++) {
        cost[i] = (int *) malloc(sizeof(int) * (n + 1));
    }
    for (j = 1; j <= n; j++) {
        for (t = 1; t <= n; t++) {
            scanf("%d", &cost[j][t]);
        }
    }
    dist = (int *) malloc(sizeof(int) * n);
    prev = (int *) malloc(sizeof(int) * n);
    printf("please input the source node: ");
    scanf("%d", &v);
    Dijkstra(n, v, dist, prev, cost);

    printf("please input the end node: ");
    scanf("%d", &i);
    printf("the distance cost form %d to %d is %d\n", v, i, dist[i]);
    ShowPath(n, v, i, dist, prev);
}
